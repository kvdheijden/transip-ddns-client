name: Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Version
        id: version
        run: |
          echo ::set-output name=VERSION::$(python -m transipddnsclient --version)

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          python -m pip install setuptools wheel twine
          python -m pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          flake8 . --count --show-source --statistics

      - name: Test with pytest
        run: |
          pytest

      - name: Build and publish (PyPi)
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload --skip-existing dist/*

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (Docker)
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
          push: true
          tags: kvdheijden/transipddnsclient:${{ steps.version.outputs.VERSION }}-python${{ matrix.python-version }}
